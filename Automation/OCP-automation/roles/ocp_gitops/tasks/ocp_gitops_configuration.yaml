---
# tasks file for ocp_gitops

- name: ocp_gitops | ocp_gitops_configuration.yaml | Configure Openshift-Gitops cluster-config project
  kubernetes.core.k8s:
    host: "{{ ocp_gitops_openshift_host }}"
    validate_certs: no
    state: present
    definition:
      apiVersion: argoproj.io/v1alpha1
      kind: AppProject
      metadata:
        name: cluster-config
        namespace: openshift-gitops
      spec:
        clusterResourceWhitelist:
          - group: "*"
            kind: "*"
        destinations:
          - namespace: "*"
            server: "*"
        sourceRepos:
          - "*"

- name: ocp_gitops | ocp_gitops_configuration.yaml | Configure Openshift-Gitops namespace-config project
  kubernetes.core.k8s:
    host: "{{ ocp_gitops_openshift_host }}"
    validate_certs: no
    state: present
    definition:
      apiVersion: argoproj.io/v1alpha1
      kind: AppProject
      metadata:
        name: namespace-config
        namespace: openshift-gitops
      spec:
        clusterResourceWhitelist:
          - group: "*"
            kind: "*"
        destinations:
          - namespace: "*"
            server: "*"
        sourceRepos:
          - "*"

- name: ocp_gitops | ocp_gitops_configuration.yaml | Configure Openshift-Gitops apps project
  kubernetes.core.k8s:
    host: "{{ ocp_gitops_openshift_host }}"
    validate_certs: no
    state: present
    definition:
      apiVersion: argoproj.io/v1alpha1
      kind: AppProject
      metadata:
        name: apps
        namespace: openshift-gitops
      spec:
        clusterResourceWhitelist:
          - group: "*"
            kind: "*"
        destinations:
          - namespace: "*"
            server: "*"
        sourceRepos:
          - "*"

- name: ocp_gitops | ocp_gitops_configuration.yaml | Configure Openshift-Gitops netpol-config project
  kubernetes.core.k8s:
    host: "{{ ocp_gitops_openshift_host }}"
    validate_certs: no
    state: present
    definition:
      apiVersion: argoproj.io/v1alpha1
      kind: AppProject
      metadata:
        name: netpol-config
        namespace: openshift-gitops
      spec:
        clusterResourceWhitelist:
          - group: "*"
            kind: "*"
        destinations:
          - namespace: "*"
            server: "*"
        sourceRepos:
          - "*"

- name: ocp_gitops | ocp_gitops_configuration.yaml | Configure Openshift-Gitops Openshift qubit repo
  kubernetes.core.k8s:
    host: "{{ ocp_gitops_openshift_host }}"
    validate_certs: no
    state: present
    definition:
      apiVersion: v1
      data:
        name: T3BlbnNoaWZ0
        password: SW5nY2MxMjMh
        type: Z2l0
        url: aHR0cHM6Ly9naXRodWIudm95YS5uZXQvVm95YS9PcGVuU2hpZnQ=
        username: czcwMDIzMg==
      kind: Secret
      metadata:
        annotations:
          managed-by: argocd.argoproj.io
        labels:
          argocd.argoproj.io/secret-type: repository
        name: repo-qubit-openshift
        namespace: openshift-gitops
      type: Opaque

- name: ocp_gitops | ocp_gitops_configuration.yaml | Configure qubit network-policy repo
  kubernetes.core.k8s:
    host: "{{ ocp_gitops_openshift_host }}"
    validate_certs: no
    state: present
    definition:
      apiVersion: v1
      data:
        name: b2MtcG9saWNpZXM=
        password: SW5nY2MxMjMh
        type: Z2l0
        url: aHR0cHM6Ly9naXRodWIudm95YS5uZXQvVm95YS9vYy1wb2xpY2llcw==
        username: czcwMDIzMg==
      kind: Secret
      metadata:
        annotations:
          managed-by: argocd.argoproj.io
        labels:
          argocd.argoproj.io/secret-type: repository
        name: repo-qubit-netpol
        namespace: openshift-gitops
      type: Opaque

- name: ocp_gitops | ocp_gitops_configuration.yaml | Configure Openshift-Gitops ArgoCD with qubit Admins Group
  kubernetes.core.k8s:
    host: "{{ ocp_gitops_openshift_host }}"
    validate_certs: no
    state: present
    definition:
      apiVersion: argoproj.io/v1alpha1
      kind: ArgoCD
      metadata:
        name: openshift-gitops
        namespace: openshift-gitops
      spec:
        applicationSet:
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 250m
              memory: 512Mi
        controller:
          processors: {}
          resources:
            limits:
              cpu: "2"
              memory: 2Gi
            requests:
              cpu: 250m
              memory: 1Gi
          sharding: {}
        sso:
          dex:
            openShiftOAuth: true
            resources:
              limits:
                cpu: 500m
                memory: 256Mi
              requests:
                cpu: 250m
                memory: 128Mi
          provider: dex
        grafana:
          enabled: false
          ingress:
            enabled: false
          resources:
            limits:
              cpu: 500m
              memory: 256Mi
            requests:
              cpu: 250m
              memory: 128Mi
          route:
            enabled: false
        ha:
          enabled: false
          resources:
            limits:
              cpu: 500m
              memory: 256Mi
            requests:
              cpu: 250m
              memory: 128Mi
        initialSSHKnownHosts: {}
        prometheus:
          enabled: false
          ingress:
            enabled: false
          route:
            enabled: false
        rbac:
          policy: |
            g, system:cluster-admins, role:admin
            g, cluster-admins, role:admin
            g, {{ ocp_gitops_admins_group }}, role:admin
          scopes: "[groups]"
        redis:
          resources:
            limits:
              cpu: 500m
              memory: 256Mi
            requests:
              cpu: 250m
              memory: 128Mi
        repo:
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 250m
              memory: 256Mi
        resourceExclusions: |
          - apiGroups:
            - tekton.dev
            clusters:
            - '*'
            kinds:
            - TaskRun
            - PipelineRun
        server:
          autoscale:
            enabled: false
          grpc:
            ingress:
              enabled: false
          ingress:
            enabled: false
          resources:
            limits:
              cpu: 500m
              memory: 256Mi
            requests:
              cpu: 125m
              memory: 128Mi
          route:
            tls:
              insecureEdgeTerminationPolicy: Redirect
              termination: reencrypt
            enabled: true
          service:
            type: ""
        tls:
          ca: {}

- name: ocp_gitops | ocp_gitops_configuration.yaml | Create custom ClusterRole used by Openshift Gitops service account
  kubernetes.core.k8s:
    host: "{{ ocp_gitops_openshift_host }}"
    validate_certs: no
    state: present
    definition:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        name: openshift-gitops-customclusterrole
      rules:
        - apiGroups:
            - "*"
          resources:
            - "*"
          verbs:
            - "*"

- name: ocp_gitops | ocp_gitops_configuration.yaml | Create ClusterRoleBinding between custom ClusterRole and Openshift Gitops service account
  kubernetes.core.k8s:
    host: "{{ ocp_gitops_openshift_host }}"
    validate_certs: no
    state: present
    definition:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        name: openshift-gitops-customclusterrolebinding
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: openshift-gitops-customclusterrole
      subjects:
        - kind: ServiceAccount
          name: openshift-gitops-argocd-application-controller
          namespace: openshift-gitops
