---
# tasks file for ocp_gitops

- name: ocp_gitops | ocp_gitops_cluster-config_apps_validation_monitoring.yaml | Openshift Gitops - Get Monitoring application status
  kubernetes.core.k8s_info:
    host: "{{ ocp_gitops_openshift_host }}"
    validate_certs: no
    api_version: argoproj.io/v1alpha1
    kind: Application
    name: config-monitoring
    namespace: openshift-gitops
    validate_certs: no
  register: ocp_gitops_application_status
  until: ocp_gitops_application_status.resources[0].status.health.status is defined
  retries: 3
  delay: 5

- name: ocp_gitops | ocp_gitops_cluster-config_apps_validation_monitoring.yaml | Openshift Gitops - Wait 10sec before checking Monitoring application status
  ansible.builtin.pause:
    seconds: 10

- name: ocp_gitops | ocp_gitops_cluster-config_apps_validation_monitoring.yaml | Openshift Gitops - Get Monitoring application status
  kubernetes.core.k8s_info:
    host: "{{ ocp_gitops_openshift_host }}"
    validate_certs: no
    api_version: argoproj.io/v1alpha1
    kind: Application
    name: config-monitoring
    namespace: openshift-gitops
    validate_certs: no
  register: ocp_gitops_application_status
  until: ocp_gitops_application_status.resources[0].status.health.status == "Healthy"
  retries: 6
  delay: 10

- name: ocp_gitops | ocp_gitops_cluster-config_apps_validation_monitoring.yaml | Openshift Gitops - Check Monitoring application status
  ansible.builtin.assert:
    that:
      - ocp_gitops_application_status.resources[0].status.health.status == "Healthy"
    fail_msg: "Monitoring application not Healthy"
    success_msg: "Monitoring application Healthy"

- name: ocp_gitops | ocp_gitops_cluster-config_apps_validation_monitoring.yaml | Openshift Gitops - Wait till Prometheus pods are running on infra nodes
  kubernetes.core.k8s_info:
    host: "{{ ocp_gitops_openshift_host }}"
    validate_certs: no
    kind: Pod
    label_selectors:
      - app.kubernetes.io/name=prometheus
    namespace: openshift-monitoring
    wait: yes
    wait_sleep: 10
    wait_timeout: 360
  register: ocp_gitops_pod_status
  until:
    - ocp_gitops_pod_status.resources[0].spec.nodeName is search ('infra')
    - ocp_gitops_pod_status.resources[1].spec.nodeName is search ('infra')
  retries: 12
  delay: 10

- name: ocp_gitops | ocp_gitops_cluster-config_apps_validation_monitoring.yaml | Openshift Gitops - Wait till Prometheus Adapter pods are running on infra nodes
  kubernetes.core.k8s_info:
    host: "{{ ocp_gitops_openshift_host }}"
    validate_certs: no
    kind: Pod
    label_selectors:
      - app.kubernetes.io/name=prometheus-adapter
    namespace: openshift-monitoring
    wait: yes
    wait_sleep: 10
    wait_timeout: 360
  register: ocp_gitops_pod_status
  until:
    - ocp_gitops_pod_status.resources[0].spec.nodeName is search ('infra')
    - ocp_gitops_pod_status.resources[1].spec.nodeName is search ('infra')
  retries: 12
  delay: 10

- name: ocp_gitops | ocp_gitops_cluster-config_apps_validation_monitoring.yaml | Openshift Gitops - Wait till Alertmanager pods are running on infra nodes
  kubernetes.core.k8s_info:
    host: "{{ ocp_gitops_openshift_host }}"
    validate_certs: no
    kind: Pod
    label_selectors:
      - app.kubernetes.io/name=alertmanager
    namespace: openshift-monitoring
    wait: yes
    wait_sleep: 10
    wait_timeout: 360
  register: ocp_gitops_pod_status
  until:
    - ocp_gitops_pod_status.resources[0].spec.nodeName is search ('infra')
    - ocp_gitops_pod_status.resources[1].spec.nodeName is search ('infra')
  retries: 12
  delay: 10

# - name: ocp_gitops | ocp_gitops_cluster-config_apps_validation_monitoring.yaml | Openshift Gitops - Wait till Grafana pod is running on infra nodes
#   kubernetes.core.k8s_info:
#     host: "{{ ocp_gitops_openshift_host }}"
#     validate_certs: no
#     kind: Pod
#     label_selectors:
#       - app.kubernetes.io/name=grafana
#     namespace: openshift-monitoring
#     wait: yes
#     wait_sleep: 10
#     wait_timeout: 360
#   register: ocp_gitops_pod_status
#   until:
#     - ocp_gitops_pod_status.resources[0].spec.nodeName is search ('infra')
#   retries: 12
#   delay: 10

- name: ocp_gitops | ocp_gitops_cluster-config_apps_validation_monitoring.yaml | Openshift Gitops - Wait till Thanos-query pods are running on infra nodes
  kubernetes.core.k8s_info:
    host: "{{ ocp_gitops_openshift_host }}"
    validate_certs: no
    kind: Pod
    label_selectors:
      - app.kubernetes.io/name=thanos-query
    namespace: openshift-monitoring
    wait: yes
    wait_sleep: 10
    wait_timeout: 360
  register: ocp_gitops_pod_status
  until:
    - ocp_gitops_pod_status.resources[0].spec.nodeName is search ('infra')
    - ocp_gitops_pod_status.resources[1].spec.nodeName is search ('infra')
  retries: 12
  delay: 10

- name: ocp_gitops | ocp_gitops_cluster-config_apps_validation_monitoring.yaml | Openshift Gitops - Wait till Prometheus (UWM) pods are running on infra nodes
  kubernetes.core.k8s_info:
    host: "{{ ocp_gitops_openshift_host }}"
    validate_certs: no
    kind: Pod
    label_selectors:
      - app.kubernetes.io/name=prometheus
    namespace: openshift-user-workload-monitoring
    wait: yes
    wait_sleep: 10
    wait_timeout: 360
  register: ocp_gitops_pod_status
  until:
    - ocp_gitops_pod_status.resources[0].spec.nodeName is search ('infra')
    - ocp_gitops_pod_status.resources[1].spec.nodeName is search ('infra')
  retries: 12
  delay: 10

- name: ocp_gitops | ocp_gitops_cluster-config_apps_validation_monitoring.yaml | Openshift Gitops - Wait till Thanos Ruler (UWM) pods are running on infra nodes
  kubernetes.core.k8s_info:
    host: "{{ ocp_gitops_openshift_host }}"
    validate_certs: no
    kind: Pod
    label_selectors:
      - app.kubernetes.io/name=thanos-ruler
    namespace: openshift-user-workload-monitoring
    wait: yes
    wait_sleep: 10
    wait_timeout: 360
  register: ocp_gitops_pod_status
  until:
    - ocp_gitops_pod_status.resources[0].spec.nodeName is search ('infra')
    - ocp_gitops_pod_status.resources[1].spec.nodeName is search ('infra')
  retries: 12
  delay: 10

- name: ocp_gitops | ocp_gitops_cluster-config_apps_validation_monitoring.yaml | Openshift Gitops -  Get ClusterOperator monitoring status
  kubernetes.core.k8s_info:
    host: "{{ ocp_gitops_openshift_host }}"
    validate_certs: no
    api_version: v1
    kind: ClusterOperator
    name: monitoring
    validate_certs: no
  register: ocp_gitops_cluster_operator_status

- name: ocp_gitops | ocp_gitops_cluster-config_apps_validation_monitoring.yaml | Openshift Gitops -  Check ClusterOperator monitoring status
  when: item.type == "Degraded"
  ansible.builtin.assert:
    that:
      - item.status == "False"
    fail_msg: "Monitoring cluster operator Degraded"
    success_msg: "Monitoring cluster operator Healthy"
  loop: "{{ ocp_gitops_cluster_operator_status.resources[0].status.conditions }}"


