kind: Route
apiVersion: route.openshift.io/v1
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "6"
    haproxy.router.openshift.io/hsts_header: max-age=31536000;includeSubDomains;preload
    haproxy.router.openshift.io/timeout: {{ $.Values.routetimeout | default "120s" }}
  name: istio-ingressgateway-istio-system-edge
  namespace: istio-system
  labels:
    app: istio-ingressgateway
    app.kubernetes.io/part-of: istio
    app.kubernetes.io/instance: istio-system
    maistra.io/owner-name: ossm-controlplane
    release: istio
    app.kubernetes.io/version: 2.3.1-1-3
    app.kubernetes.io/component: istio-ingress
    maistra-version: 2.2.5
    istio: ingressgateway
    app.kubernetes.io/managed-by: maistra-istio-operator
    maistra.io/owner: istio-system
    app.kubernetes.io/name: istio-ingress
spec:
  host: >-
    istio-ingressgateway-istio-system-edge.{{ $.Values.dnsName }}
  to:
    kind: Service
    name: istio-ingressgateway
    weight: 100
  port:
    targetPort: http2
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Redirect
  wildcardPolicy: None
---
{{- if .Values.additionalIngress}}
{{- range $ingress := .Values.additionalIngress }}
---
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "6"
    haproxy.router.openshift.io/hsts_header: max-age=31536000;includeSubDomains;preload
    haproxy.router.openshift.io/timeout: {{ $.Values.routetimeout | default "120s" }}
  name: istio-ingressgateway-{{ $ingress.shortid }}-istio-system-edge
  namespace: istio-system
  labels:
    app: istio-ingressgateway-{{ $ingress.shortid }}
    app.kubernetes.io/part-of: istio
    app.kubernetes.io/instance: istio-system
    maistra.io/owner-name: ossm-controlplane
    release: istio
    app.kubernetes.io/version: 2.3.1-1-3
    app.kubernetes.io/component: istio-ingress
    maistra-version: 2.2.5
    istio: ingressgateway-{{ $ingress.shortid }}
    app.kubernetes.io/managed-by: maistra-istio-operator
    maistra.io/owner: istio-system
    app.kubernetes.io/name: istio-ingress
    # type: sharded
spec:
  host: istio-ingressgateway-{{ $ingress.shortid }}.{{ $.Values.dnsName }}
  to:
    kind: Service
    name: istio-ingressgateway-{{ $ingress.shortid }}
    weight: 100
  port:
    targetPort: http2
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Redirect
  wildcardPolicy: None
{{- end }}
{{- end }}


