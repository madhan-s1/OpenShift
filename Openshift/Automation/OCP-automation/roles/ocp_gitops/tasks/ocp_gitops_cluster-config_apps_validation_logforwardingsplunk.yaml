---
# tasks file for ocp_gitops

- name: ocp_gitops | ocp_gitops_cluster-config_apps_validation_logforwardingsplunk.yaml | Openshift Gitops - Wait till Logforwarding application is created
  kubernetes.core.k8s_info:
    host: "{{ ocp_gitops_openshift_host }}"
    validate_certs: no
    api_version: argoproj.io/v1alpha1
    kind: Application
    name: config-logforwardingsplunk
    namespace: openshift-gitops
    validate_certs: no
  register: ocp_gitops_application_status
  until: ocp_gitops_application_status.resources[0].status.health.status is defined
  retries: 3
  delay: 5

- name: ocp_gitops | ocp_gitops_cluster-config_apps_validation_logforwardingsplunk.yaml | Openshift Gitops - Wait 10sec before checking Logforwarding application status
  ansible.builtin.pause:
    seconds: 10

- name: ocp_gitops | ocp_gitops_cluster-config_apps_validation_logforwardingsplunk.yaml | Openshift Gitops - Get Logforwarding application status
  kubernetes.core.k8s_info:
    host: "{{ ocp_gitops_openshift_host }}"
    validate_certs: no
    api_version: argoproj.io/v1alpha1
    kind: Application
    name: config-logforwardingsplunk
    namespace: openshift-gitops
    validate_certs: no
  register: ocp_gitops_application_status
  until: ocp_gitops_application_status.resources[0].status.health.status == "Healthy"
  retries: 10
  delay: 10

- name: ocp_gitops | ocp_gitops_cluster-config_apps_validation_logforwardingsplunk.yaml | Openshift Gitops - Check Logforwarding application status
  ansible.builtin.assert:
    that:
      - ocp_gitops_application_status.resources[0].status.health.status == "Healthy"
    fail_msg: "Logforwarding application not Healthy"
    success_msg: "Logforwarding application Healthy"

